# Heading1 BANDIT
Bandit challenges steps to login to the server:
'ssh bandit@bandit.labs.overthewire.org -p 2220'.
"Enter password"-->will be displayed to take password as a input.

LEVEL 0---->LEVEL 01
Commands used:
ls-to list the files in that directory
cat-to read the content in that particular file.
Password:ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If

_______________________________________________________________

LEVEL-01---->LEVEL-02
Commands used:
ls-to list files
cat-to show the content in file
./- : tell the system to look for a file named - in that current directory.
Password:263JGJPfgU6LtdEvgfWU1XP5yac29mFx

_______________________________________________________________

LEVEL-02 ----> LEVEL-03
Commands used:
ls-to list the files
cat-to read the content
./--spaces : to look for a file named --spaces 
\-- to escape the spaces between the file name.
Password:MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx

_______________________________________________________________

LEVEL-03 ----> LEVEL-04
Commands used:
ls-to list the files
cat-to read the content
cd- to go inside the directory
Password:2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ

_______________________________________________________________

LEVEL-04 ----> LEVEL-05
Commands used:
ls-to list the files
cat-to read the content
cd- to go inside the directory
file- to check the data type of the file
grep- to get a particular(specified) data in that file.
Password:4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw

_______________________________________________________________

LEVEL-05---->LEVEL-06
Commands used:
ls-to list the files
cat-to read the content
cd- to go inside the directory
find-search a specific file or directory.
. -type f -size 1033c :-means this find command is going to search for a specific file with the size of 1033 bytes
Password:HWasnPhtq9AVKe0dmk45nxy20cvUa6EG

_______________________________________________________________

LEVEL-06---->LEVEL-07
Commands used:
ls-to list the files
cat-to read the content
find-allows user to manage files which we dont have access also can visit by find.
/->start searching from rrot of the directory
-user bandit7->look for files owned by user bandit7
-group bandit6-> look for files which are belong to group bandit6
-size 33c-> looks for a file of size 33bytes
2>/dev/null->Hides the error messages.
Password:morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj

_______________________________________________________________

LEVEL-07---->LEVEL-08
Commands used:
ls-to list the files
cat-to read the content
find-allows user to manage files which we dont have access also can visit by find.
cat data.txt | grep 'millionth'-->here the output of data.txt file in take to the grep because of the |(pipeline).
grep 'millionth'-> grep filters the input which recieved from the pipe line by line and prints the line which millionth.
Password:dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc

_______________________________________________________________

LEVEL-08---->LEVEL-09
Commands used:
ls-to list the files
sort data.txt->to sort the data in the file
|->take the output from the file and gives the input to uniq -u
uniq -u ->give the uniq line as output
Password:4CKMh1JI91bUIZZPXDqGanal4xvAg0JM

_______________________________________________________________

LEVEL-09---->LEVEL-10
Commands used:
ls-to list the files
sort ->used to filter the data in a specific file.
grep->checks the filtered data with the given condition 
sort data.txt | grep "=" ->sorted data given to grep to check the data with =.
Password:FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey

_______________________________________________________________

LEVEL-10---->LEVEL-11
Commands used:
ls-to list the files 
cat- to display the text in an file
cat data.txt | base64 --d
lets break down the command:
cat data.txt gives the encoded text to base64 --d with the help of | the base64 converts the encoded text to readable text.
Password:dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr

_______________________________________________________________

LEVEL-11---->LEVEL-12
Commands used:
ls-to list the files.
cat-to display the text in a file.
tr -->translate the text to requested formate
cat data.txt | tr "A-Za-z" "N-ZA-Mn-za-m"--->here the output of the cat data.txt comes to tr and the 1st argument is our required formate and the 2nd argument is the present text formate we got from the output of cat.
(we are using that formate because the letters were shifted 13 places forward so... after shifting the formate will be this)
Password:7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4

_______________________________________________________________

LEVEL-12----->LEVEL-13
Commnads used:
ls:to list files 
mkdir: makes a new directory
cp:copies files to directory
cd: to change directory
mv:moves or renames files
xxd -r: convert hexdump into binary.
file : determines the type of file and its data.
gunzip:decompress files that were compressed using gzip command
bunzip2: decompress files that were compressed using bzip2 command.
Password:FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn

_______________________________________________________________

LEVEL-13---->LEVEL-14
Commands used:
ls: to list files to login to 14th level
ssh -i sshkey.private bandit14@localhost -p 2220--->is used to access private keys.
Password:MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS

_______________________________________________________________

LEVEL-14---->LEVEL-15
Commands used:
nc->for reading and writing data between 2 computer networks.
localhost ->Connects to your own server.
30000 -> the specific port number where the service is running
Password:8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo

_______________________________________________________________

LEVEL-15---->LEVEL-16
Commands used:
cat:shows the contents of life
ncat ->for reading/writing data over the network
--ssl ->enables SSL encryption for secure connection.
localhost -> connects to your own system.
30001->the specific port number of the server.
Password:kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx
_______________________________________________________________

LEVEL-16 ---->LEVEL-17
Commands used:
nmap localhost -p 31000-32000---->let's break down the command 
nmap--->used to run the network scanner(checks which ports are open,closed or blocked.).It's like a door locker checks whether the port is open or closed or blocked.
localhost--->our own machine(which services are listening)
-p 31000-32000 : we are telling for nmap that you have to check these ports.(-p)means port range.
->We will be getting which ports are opened,we have to check individually each port if there are multiple ports are opened.
ncat : used to open our required connection.
--ssl:this tell ncat to use ssl/tls encryption because this service running on the target port.if its not connected we might get the garbage output.
sudo :superUser Do.Helps regular user to run commands with root administrator.
vim : vi IMproved a text editor(basically a improved text editor).
chmod: change mode,used to set permissions for a file.(r,w,x)
Password:CgmS55GVlEKTgx8xpW8HuWnHlBKP924b
__________________________________________________________________

LEVEL-17---->LEVEL-18
Commands used:
ls-list files
cat-to show the content
diff-to see the difference between two files 
cd - :to exit from a particular directory.
Password:x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO
__________________________________________________________________

LEVEL-18---->LEVEL-19
Commands used:
ssh -t bandit18@bandit.labs.overthewire.org -p 2220
Let's break down the command:
ssh-->Secure shell,used to connect securely,encrypts all data.
-t:forces pseudo-terminal allocation
-->Now,pseudo terminal is a fake terminal allows user to run interactive commands.
bandit18@bandit.labs.overthewire.org :username and server address.
-p 2220:ssh port
-->Now we are accessing the data from the fake terminal.
Password:cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8
_________________________________________________________________

LEVEL-19---->LEVEL-20
Commands used:
./bandit20-do cat /etc/bandit_pass/bandit20
-->Here, we are working in this directory.We are running commands from bandit20 even though we are in bandit19 beacuse of ./bandit20-do.
cat /etc/bandit_pass/bandit20-->we are getting the content in that particular path.
Password:0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO
__________________________________________________________________

LEVEL-20---->LEVEL-21
Commands Used:
cat /etc/bandit_pass/bandit20 | nc localhost 1234
cat->for display of content.
cat /etc/bandit_pass/bandit20 -->cat reads the content from this file.As this file contains password.
| ->gets the password and gives input to the next command.
nc localhost 1234 ->nc sending data to local machine port 1234.
./succonect 1234-->seds data to a particular port.
Password:EeoULMCra2q0dSkYj561DX7s1CpBuOBt
___________________________________________________________________

## GIT EXERCISES

Exercise-01: master

--> I created a new file and made my first commit.
Commands used:
git start --> is command similar to git init, here there will be a start.sh file in the repository which will be triggered when you type that command
git verify --> is the submit command that you should run whenever you complete one exercise.

Exercise-02: Commit one file

--> Created a new file named A.txt.
Commands used:
git add A.txt
git commit -m "commit A.txt file"
git verify

Exercise-03:commit-one-file-staged
For this task, I learned how to unstage a file.
Commands used:
git reset -- B.txt
git add A.txt
git commit -m "Add A.txt only"

Exercise-04:ignore-them
I created a .gitignore file so Git would ignore unwanted files:
gitgnore is a text file that tells Git which files and folders to ignore. This can be useful for a variety of reasons, such as ignoring temporary files, IDE-specific files, or sensitive data
Commands used:
git add .
git commit -m "commit useful files"
git verify

Exercise-05 : chase-branch

git merge is a command used to merge two separate branches, this can be very helpful when two developers are working on two functionalities of a product and want to combine their code into one on the main branch, git merge seamlessly does the job
Commands used:
git checkout chase-branch
git merge escaped
git verify

Exercise-06 :

This exercise will helped to learn git conflicts, which arises when two separate branches have made changes in the same line of a file.
Commands used:
git checkout merge-conflict
git merge another-piece-of-work
nano equation.txt
git add equation.txt
git commit -m "solved merge conflict"
git verify

Exercise-07 :

I switched to the bugfix branch: using git switch bugfix
Removed the buggy line in bug.txt, saved, added, and committed it.
Then I switched back to the main branch and added a newline.
Commands used:
git switch main
nano bug.txt
git add bug.txt
git commit -m "Added newline in bug.txt"

Exercise-08 :

I fixed conflicts and continued with git rebase --continue.
After finishing, I used git log --oneline to confirm the new history.
Commands used:
git switch my-feature-branch
git rebase hot-bugfix

Exercise-09:

To keep a file locally but remove it from tracking, I used.
Just like the Linux command rm for removing files and folder git rm is used for the same but in the stage and thus not requiring to unstage the file in order to do the thing.
Commands used:
echo "ignored.txt" >> .gitignore
git add .gitignore
git rm --cached ignored.txt
git commit -m "Stop tracking ignored.txt"

Exercise-10:

I used git diff to inspect the changes I made before committing.
First, I edited the feature.txt file by adding a test line, then I ran git diff to see the unstaged changes.
After that, I staged the file and used git diff --staged to confirm what would be committed.
Finally, I committed the changes.
Commands used:
nano feature.txt
git diff
git add feature.txt
git diff --staged
git commit -m "Added test line to feature.txt"

Exercise-11:

In this exercise, I explored the commit history using git log.
I checked the latest commits, author info, and commit messages.
I also tried out a more concise view with --oneline and visualized the commit graph.
Commands used:
git log
git log --oneline
git log --oneline --graph --all

Exercise-12:
I commit the file with date to 1987 and checked the latest commit.
Commands used : 
git commit --amend --no-edit --date="1987-10-26 10:00:00"
git log -1












